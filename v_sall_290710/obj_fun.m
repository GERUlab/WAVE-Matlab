function [OF] = obj_fun(X0)
%OBJ_FUN (sub-program of function FITTING_GLOB). 
%	Calculate the objective function value (OF) for a set of model
%	parameters (X0: fitted and PARAM: fixed). The objective function is formulated as 
%	the weighted least squares problem which include pressure head data, 
%	water content data and bottom flux data.
%	OBJ_FUN return OF = 1 when the direct simulation has failed (no convergence).
%	The values of Ymodel, the vector of simulated data, corresponding to Ymeas,
%	the vector of observed data, are obtained by linear interpolation on the data
%	generated by the direct simulation.

%	S. Lambot (October 2000)
%   Modified, M. Vanclooster 5/4/08

% Global variables shared with FITTING_GLOB
global DATA_INV t_obs%weigth_ph weigth_wc weigth_fl
global PARAM
global Ymodel Ymeas ERR WEIGHT
global cpt nf

% Soil parameters vector determination
soil_parameters = PARAM;
i2 = 1;
for i1 = 1:length(soil_parameters)
   if isnan(soil_parameters(i1))
      soil_parameters(i1) = X0(i2);
      i2 = i2+1;
   end
end

% Initialize variables
Ymodel = []; ERR = []; Wvect = [];
WEIGHT = [1];  

a=soil_parameters
% Solve the direct problem for the given parameters vector
[tnode wcnodecalc] = inv_wavemat105_new(soil_parameters);

% Calculate Ymodel, Ymeas
teval=intersect(round(tnode'),round(t_obs'));
for i=1:length(teval);
    tt=teval(i);
    index_atime(i)=find(round(tnode')==tt,1,'last');
    index_btime(i)=find(round(t_obs')==tt,1,'last');
end
Ymodel=wcnodecalc(1,index_atime)';
Ymeas =DATA_INV(1,index_btime)';

% Calculate the objective fonction only if the direct problem has converged
if ~isempty(tnode)
	% Calculation of the vector of residuals
	ERR = Ymeas-Ymodel;
	% Calculation of the objective fonction
	OF = ERR'*WEIGHT*ERR;
else
   OF = 1;	% the objective function is not defined (no convergence)
end

% Counter updating and display
cpt = cpt+1;
disp(['iter ' num2str(cpt) ' on ' num2str(nf) ', OF = ' num2str(OF)]);
